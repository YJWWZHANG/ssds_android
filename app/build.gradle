apply plugin: 'com.android.application'
apply plugin: 'com.jakewharton.butterknife'
apply plugin: 'com.alibaba.arouter'
apply plugin: 'com.mob.sdk'

// 在MobSDK的扩展中注册SMSSDK的相关信息
MobSDK {
    appKey "259259ecf38c0"
    appSecret "d4ce7685fea07ef0128c12971e2c882c"
    SMSSDK {
        gui false
    }
    ShareSDK {
        //平台配置信息
        devInfo {
            SinaWeibo {
                appKey "2214856520"
                appSecret "32bec99413fb6d4fd61bb8d5bd184843"
                callbackUri "https://www.dashi1314.com"
                shareByAppClient true
            }
            Wechat {
                appId "wx5ce30bc35cb2c554"
                appSecret "254f63668cc2c2748b260d052c4c7b28"
            }
            QQ {
                appId "100371282"
                appKey "aed9b0303e3ed1e27bae87c33761161d"
            }
            WechatMoments {

            }
//            Facebook {
//                appKey "1412473428822331"
//                appSecret "a42f4f3f867dc947b9ed6020c2e93558"
//                callbackUri "https://mob.com"
//            }
        }
    }
}

Properties properties = new Properties()
File localPropertiesFile = project.rootProject.file("local.properties");
if (localPropertiesFile.exists()) {
    properties.load(localPropertiesFile.newDataInputStream())
}

android {
    signingConfigs {
        config {
            storeFile file(properties.getProperty("storeFile"))
            storePassword properties.getProperty("storePassword")
            keyAlias properties.getProperty("keyAlias")
            keyPassword properties.getProperty("keyPassword")
        }
    }

    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion

    defaultConfig {
        applicationId rootProject.ext.android.applicationId
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
            }
        }

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        externalNativeBuild {
            cmake {
                cppFlags "-std=c++11 -frtti -fexceptions"
            }
        }

        ndk {
            //选择要添加的对应cpu类型的.so库。
            abiFilters 'armeabi', 'x86'
        }

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            signingConfig signingConfigs.config
        }
    }

    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }

}

rootProject.ext.merge.each { c ->
    project.dependencies.add("implementation", project.project(':component-' + c))
}

dependencies {
    implementation project(':common')
    annotationProcessor "com.jakewharton:butterknife-compiler:$rootProject.ext.dependencies.butterknife"
    annotationProcessor "com.google.dagger:dagger-compiler:$rootProject.ext.dependencies.dagger2"
    annotationProcessor "com.alibaba:arouter-compiler:$rootProject.ext.dependencies.router_compiler"
    /*阿里云推送*/
    implementation 'com.aliyun.ams:alicloud-android-push:3.1.2'
}
