/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
#include <stdio.h>
#include <string.h>
/* Header for class com_xiaopeng_jnidome_JNIUtils */

#ifndef _Included_com_xiaopeng_jnidome_JNIUtils
#define _Included_com_xiaopeng_jnidome_JNIUtils
#ifdef __cplusplus
extern "C" {
#endif

static jclass contextClass;
static jclass signatureClass;
static jclass packageNameClass;
static jclass packageInfoClass;

/**
    安卓签名字符串
*/
const char *RELEASE_SIGN = "3082033130820219a0030201020204515eef3f300d06092a864886f70d01010b05003048310a3008060355040613017a310a3008060355040813017a310a3008060355040713017a310a3008060355040a13017a310a3008060355040b13017a310a3008060355040313017a3020170d3138303432383037313031305a180f32313137303430343037313031305a3048310a3008060355040613017a310a3008060355040813017a310a3008060355040713017a310a3008060355040a13017a310a3008060355040b13017a310a3008060355040313017a30820122300d06092a864886f70d01010105000382010f003082010a02820101009166625d9040158d67208355db78a407edd2f29c2349cae5bb1596f9daf30723311ec8bfba8e1b06330c29cb4f1963fe3ddeb8fe4911f9142ee7522a7598c05c14a2c34a7a415ecfdb5c4c9d73c32a281233c72e6866f9aae3be8f3fbf7b26eb4a83771d5eefda5e998662c2a2b77a93a21680cf533ec4eabd1a8bd2e4556b65e40915ff09a8eee6bfcb765dbc70ad2150ac82f7eb5f0446bccb3ad82933e204a60505170489ccfb0d49eb34ae09839063f463dbad9db31378f146649eb4a4da53eb14eeb1a501faf34e1ceb1eec9b4750444881f38bd30ecef08b7214702fe189b92520a6bf6151d99f2817f3914353bf283d43687fde23717a099b963375510203010001a321301f301d0603551d0e0416041436732d4c605df744a76faf0c34efe7dfbd1f9893300d06092a864886f70d01010b05000382010100886b3ca5c493916d52d00aafc229b37bf8a9c42ce0135741835859a82e237f7a17e27d470dbcd3307c479be32ab1a4921327d340195c2e4adc995265e1188ed59fed78b3557cadfb7bc0d204ba46e160644d6e9e992d251e7fc58b10f19919f6fd970c7f51ea3c3f1cdbf411879561df15fd4c03422a4dce9fcdc2eaa6a0f884c2fcc2b8454192f67f3690e4e5052a8f2aca5aedfe20a991c1156f2d16f70f08ffe1be077f5ee1bff67ab609e733991e113df4a58330a75be9dad5630e83285064758126f6da27c301efa2d31d4a24538bb3f285c517ad31bed85a69469775f579fdccb3a16a26516a1d0b0e612f660f9ce59556b227f6760bbb5dfea2e8adab";
/**
    密钥
*/
const char *SECRET_KEY = "qwertyuiopadsfghjkzxcvbn";

/*
    根据context对象,获取签名字符串
*/
const char *getSignString(JNIEnv *env, jobject contextObject) {
    jmethodID getPackageManagerId = (env)->GetMethodID(contextClass, "getPackageManager", "()Landroid/content/pm/PackageManager;");
    jmethodID getPackageNameId = (env)->GetMethodID(contextClass, "getPackageName", "()Ljava/lang/String;");
    jmethodID signToStringId = (env)->GetMethodID(signatureClass, "toCharsString", "()Ljava/lang/String;");
    jmethodID getPackageInfoId = (env)->GetMethodID(packageNameClass, "getPackageInfo", "(Ljava/lang/String;I)Landroid/content/pm/PackageInfo;");
    jobject packageManagerObject = (env)->CallObjectMethod(contextObject, getPackageManagerId);
    jstring packNameString = (jstring) (env)->CallObjectMethod(contextObject, getPackageNameId);
    jobject packageInfoObject = (env)->CallObjectMethod(packageManagerObject, getPackageInfoId, packNameString, 64);
    jfieldID signaturefieldID = (env)->GetFieldID(packageInfoClass, "signatures", "[Landroid/content/pm/Signature;");
    jobjectArray signatureArray = (jobjectArray) (env)->GetObjectField(packageInfoObject, signaturefieldID);
    jobject signatureObject = (env)->GetObjectArrayElement(signatureArray, 0);
    return (env)->GetStringUTFChars((jstring) (env)->CallObjectMethod(signatureObject, signToStringId), 0);
}

JNIEXPORT jstring JNICALL Java_com_dashi1314_common_utils_SecretKeyUtil_getSecretKey
        (JNIEnv *env, jclass jobj, jobject contextObject) {
    const char *signStrng = getSignString(env, contextObject);
    if (strcmp(signStrng, RELEASE_SIGN) == 0)//签名一致  返回合法的 api key，否则返回错误
    {
        return (env)->NewStringUTF(SECRET_KEY);
    } else {
        return (env)->NewStringUTF("error");
    }

}

/**
    利用OnLoad钩子,初始化需要用到的Class类.
*/
JNIEXPORT jint JNICALL JNI_OnLoad(JavaVM *vm, void *reserved) {

    JNIEnv *env = NULL;
    jint result = -1;
    if (vm->GetEnv((void **) &env, JNI_VERSION_1_4) != JNI_OK)
        return result;

    contextClass = (jclass) env->NewGlobalRef((env)->FindClass("android/content/Context"));
    signatureClass = (jclass) env->NewGlobalRef((env)->FindClass("android/content/pm/Signature"));
    packageNameClass = (jclass) env->NewGlobalRef((env)->FindClass("android/content/pm/PackageManager"));
    packageInfoClass = (jclass) env->NewGlobalRef((env)->FindClass("android/content/pm/PackageInfo"));

    return JNI_VERSION_1_4;
}

#ifdef __cplusplus
}
#endif
#endif